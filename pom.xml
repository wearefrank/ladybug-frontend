<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.wearefrank</groupId>
  <artifactId>ladybug-frontend</artifactId>
  <version>0.0.60</version>
  <name>Angular Frontend of Ladybug</name>

  <properties>
    <meta-inf.maven.output>${project.build.outputDirectory}/META-INF/maven/${project.groupId}/${project.artifactId}
    </meta-inf.maven.output>
    <!-- For pom.properties -->
    <version>${project.version}</version>
    <compiled.frontend.location>${basedir}/dist</compiled.frontend.location>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.build.directory}</directory>
            </fileset>
            <fileset>
              <directory>${compiled.frontend.location}</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <workingDirectory>${project.basedir}</workingDirectory>
        </configuration>
        <executions>
          <execution>
            <id>yarn install</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <executable>yarn</executable>
              <arguments>
                <argument>install</argument>
                <argument>--immutable</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>ng build</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <executable>yarn</executable>
              <arguments>
                <argument>build</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>${meta-inf.maven.output}/pom.properties</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy yarn dist to Maven build folder</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}/
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${compiled.frontend.location}/ladybug</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>package.json</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>${compiled.frontend.location}/ladybug</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>package.json</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy pom.xml</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${meta-inf.maven.output}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}</directory>
                  <filtering>false</filtering>
                  <includes>
                    <include>pom.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>frankframework</id>
      <distributionManagement>
        <repository>
          <id>frankframework</id>
          <url>https://nexus.frankframework.org/content/repositories/thirdparty</url>
        </repository>
        <snapshotRepository>
          <id>frankframework</id>
          <url>https://nexus.frankframework.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <site>
          <id>www.frankframework.org</id>
          <url>file:target/site-deploy</url>
        </site>
      </distributionManagement>
      <repositories>
        <repository>
          <id>frankframework</id>
          <url>https://nexus.frankframework.org/content/groups/public</url>
        </repository>
      </repositories>
    </profile>
    <profile>
      <id>sign</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.4</version>
            <configuration>
              <passphrase>${gpg.passphrase}</passphrase>
              <gpgArguments>
                <!-- This is necessary for gpg to not try to use the pinentry programs -->
                <arg>--batch</arg>
                <arg>--no-tty</arg>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ossrh</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.13</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <distributionManagement>
        <repository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <site>
          <id>www.wearefrank.org</id>
          <url>file:target/site-deploy</url>
        </site>
      </distributionManagement>
    </profile>
  </profiles>
</project>
